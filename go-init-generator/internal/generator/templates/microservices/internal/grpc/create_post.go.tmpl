package grpc

import (
	"context"

	pb "{{ .Name }}/pkg/api/grpc"

	"github.com/google/uuid"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

func (s *GRPCService) CreatePost(ctx context.Context, req *pb.CreatePostRequest) (*pb.CreatePostResponse, error) {
	userID, err := uuid.Parse(req.UserId)
	if err != nil {
		s.logger.Error("Failed to parse user ID", "error", err)
		return nil, status.Errorf(codes.InvalidArgument, "invalid user ID: %v", err)
	}

	post, err := s.service.CreatePost(ctx, userID, req.Title, req.Content)
	if err != nil {
		s.logger.Error("Failed to create post", "error", err)
		return nil, status.Errorf(codes.Internal, "failed to create post: %v", err)
	}

	return &pb.CreatePostResponse{
		Id:      post.ID.String(),
		Title:   post.Title,
		Content: post.Content,
		UserId:  post.UserID.String(),
	}, nil
}
